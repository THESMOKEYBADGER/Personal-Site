body {
    background-color: #45474B;
    /* Change to your desired color */
}

header {
    background-color: #d1e7dd;
    /* Example color for header */
}

footer {
    background-color: #d1e7dd;
    /* Example color for footer */
}

.white-text {
    color: white !important;
}

.blue-text {
    color: #B4D6CD !important;
}

.pink-text {

    color: #FF8C9E
}


.button-colour {
    background-color: #FFDA76 !important;

    border: transparent;
}

.button-colour-secondary {
    background-color: #B4D6CD;
    border: transparent;
    color: white;
}


.mini-title {

    color: #FFDA76 !important;
}

.rounded-image {
    max-width: 330px;
    height: auto;
    border-radius: 15px;
    /* Adjust the value for more or less rounding */
}

.rounded-image2 {
    border-radius: 15px;


}

/* Gradient CSS */
.blob {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 650px;
    height: 650px;
    border-radius: 100%;
    background-image: linear-gradient(#1100ff 10%, yellow);
    filter: blur(250px);
    transition: all 450ms ease-out;
    position: fixed;
    pointer-events: none;
    left: 0;
    top: 0;
    transform: translate(calc(-50% + 15px), -50%);
    z-index: -1;
    background-size: cover;
}

.full-height-center {
    margin-top: -100px;
    display: flex;
    justify-content: center;
    /* Center horizontally */
    align-items: center;
    /* Center vertically */
    height: 100vh;
    /* Full height of the viewport */
}


.transparent-header {
    background-color: transparent !important;
    position: relative;
    z-index: 2;
    /* Ensure the header is above other content */
}



@media (min-width: 992px) {

    /* You can adjust the min-width value as needed */
    .side-padding {
        padding-right: 100px;
        padding-left: 100px;
    }
}



@media (min-width: 768px) {
    .center-image {
        display: block !important;
        margin-left: auto;
        margin-right: auto;
        max-width: 100%;
        height: auto;
        /* Maintain aspect ratio */
    }
}


/* Ensure the list container behaves as a block element */
.list-container {
    width: 100%;
    /* Full width of its parent container */
    z-index: 1000;
    /* Ensure it's on top of other content */
    transition: max-height 0.3s ease, padding 0.3s ease;
    /* Smooth transition */
    overflow: hidden;
    /* Hide overflowing content */
    max-height: 0;
    /* Initially collapsed */
    padding: 0;
    /* Initially no padding */
    
}

/* When visible, expand the container */
.list-container.expanded {
    max-height: 280px;
    /* Set a large enough value to fit the content */
    padding: 10px;
    /* Add padding when expanded */
    margin-top: 20px;
    
}

/* Style for visible list items */
.list-item.visible {
    opacity: 1; /* Fully visible */
    transition: opacity 0.1s ease-in-out;
  }
  
  /* Style for hidden list items */
  .list-item {
    padding: 10px;
    opacity: 0; /* Initially hidden */
    transition: opacity 0.1s ease-in-out;
    color:white;
  }

.button-hover-color:hover {
    background-color: #FF8C9E;
}

.item-hover-color:hover {
    color: #FF8C9E !important;
}

.full-height{
    height: 100vh;
    min-height: 500px;
    justify-content: center;
}

.about-section {
    margin-top: 50px;
    padding: 50px;
    text-align: center;
    height: 500px;
    color: white;
}

.spacer{
    height: 140px;
}

@media (max-width: 768px) {
    .fix-top{

        margin-top: 400px;
        /* Maintain aspect ratio */
    }
}

.half-vh{
    height: 50vh;
    
}

.transparent{
    background-color: transparent !important;
}

.opacity{
    opacity: 25%;
}









.flex-container {
    display: flex;
    flex-wrap: wrap; /* Allows items to wrap to the next line */
  }
  
  .flex-item {
    flex: 0 0 50%; /* Each item takes up 50% of the container's width */
    box-sizing: border-box; /* Include padding and border in the element's width/height */
    padding: 10px; /* Optional: add padding inside each item */
  }
  
  /* Media query for mobile devices */
  @media (max-width: 768px) {
    .flex-item {
      flex: 0 0 100%; /* On mobile, each item takes up 100% of the width */
    }
  }


  .job-description {
    transition: opacity 0.5s ease-in-out;
  }
  
  .d-none {
    display: none;
  }


  




  .list-group-item {
    cursor: pointer;
  }
  
  .list-group-item-check {
    position: absolute;
    clip: rect(0, 0, 0, 0);
  }
  
  .list-group-item:hover {
    background-color: #b4d6cd33;
    
  }
  
  .list-group-item:active,
  .list-group-item-check:checked + .list-group-item {
    background-color: #B4D6CD;
  }
  
  .transparent-background{
    background-color: transparent;

  }







  .flex-container {
    display: flex;
    align-items: center; /* Vertically centers items within the container */
    justify-content: center; /* Horizontally centers items within the container */
}

.flex-item {
    display: flex;
    align-items: center; /* Centers content vertically within each flex item */
    justify-content: center; /* Centers content horizontally within each flex item */
}

/* Ensure .list-group and .flashcard-container have consistent sizing */
.list-group {
    width: 300px; /* Adjust width */
}

.flashcard-container {
    width: 400px; /* Adjust width */
    height: 300px; /* Adjust height */
    perspective: 1000px; /* Adds perspective for 3D effect */
}

.flashcard {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.6s ease-in-out;
}

.flashcard-side {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    box-sizing: border-box;
    border-radius: 10px; /* Optional: Rounded corners */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Optional: Shadow */
}

.front {
    z-index: 2;
    transform: rotateX(0deg);
}

.back {
    transform: rotateX(-180deg);
}

.flashcard.flipped {
    transform: rotateX(-180deg);
}
